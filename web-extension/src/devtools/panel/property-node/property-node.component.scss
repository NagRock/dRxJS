$arrow-short: 4px;
$arrow-long: 6px;

:host {
  display: block;
  font-family: monospace;
  font-size: 12px;
  cursor: default;
}

.key {
  &.primary {
    color: deeppink;
  }

  &:not(.primary) {
    color: pink;
  }

  &::after {
    display: inline;
    content: ': ';
  }

  &::before {
    display: inline-block;
    content: '';
    width: 0;
    height: 0;
    margin-right: (2 * $arrow-long);
  }

  &.expandable:not(.expanded)::before {
    border-top: $arrow-short solid transparent;
    border-bottom: $arrow-short solid transparent;
    border-left: $arrow-long solid black;
    margin-right: $arrow-long;
  }

  &.expandable.expanded::before {
    border-left: $arrow-short solid transparent;
    border-right: $arrow-short solid transparent;
    border-top: $arrow-long solid black;
    margin-right: $arrow-short;
  }
}

.value {
  &.lazy {
    background-color: lightgray;
  }

  &.null,
  &.undefined {
    color: gray;
  }

  &.boolean,
  &.number {
    color: blue;
  }

  &.string {
    color: red;
  }

  &.string::before,
  &.string::after {
    display: inline;
    content: '"';
    color: black;
  }

  &.symbol {
    color: red;
  }

  &.bigint {
    color: green;
  }

  &.bigint::after {
    display: inline;
    content: 'n';
  }

  &.object {
    &::after {
      display: inline;
      content: '{\2026}';
    }
  }

  &.array {
    &::after {
      display: inline;
      content: '[\2026]';
    }
  }

  &.function {
    color: black;
    font-style: italic;

    &::before {
      display: inline;
      content: 'f ';
      color: blue;
    }

    &::after {
      display: inline;
      content: '()';
    }
  }

  &.decorated {
    color: black;
    font-style: italic;

    &::before {
      display: inline;
      content: attr(data-prefix);
      color: green;
    }

    &::after {
      display: inline;
      content: attr(data-suffix);
    }
  }
}

.properties {
  margin-left: 8px;
}
